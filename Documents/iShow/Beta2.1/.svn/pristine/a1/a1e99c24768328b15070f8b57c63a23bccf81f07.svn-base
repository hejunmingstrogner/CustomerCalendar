//
//  DetailViewController2.m
//  VideoProject_0.1Beta
//
//  Created by storm on 16/10/18.
//  Copyright © 2016年 CX. All rights reserved.
//

#import "DetailViewController2.h"
#import "CommentController.h"
#import "BasicNavigationController.h"
#import "ShareVideosInfoModel.h"
#import "UIImage+MultiFormat.h"
#import "DetailViewCell.h"
#import "XYVideoModel.h"
#import "VideoModelDBManager.h"
#define kCellId @"DetailViewCell"
@interface DetailViewController2 ()<UITableViewDelegate,UITableViewDataSource,XYVideoPlayerViewDelegate>
{
    CGRect cellFrame;
    
}
@property (nonatomic,strong) UIButton *button;
@property (nonatomic , strong) UITableView * tableView;

@property (strong, nonatomic) NSMutableArray *heightArray;
@property (strong, nonatomic) UIImage *image;
@property (nonatomic, strong) DetailViewCell *detailCell;//标记停留的cell
@property (nonatomic, strong) NSIndexPath *indexPath;//标记停留cell的indexPath
@property (nonatomic, strong) NSIndexPath *stateIndexPath;//用来判断indexpath是否变化，与self.indexPath作比较

@property (nonatomic, strong) UIView *videoPlayerView;
@property (nonatomic, strong) UIView *fullScreenVIew;
@property (nonatomic, strong) NSMutableArray *imageHeightsArray;
@property (nonatomic, strong) NSMutableArray *textHeightsArray;
@property (nonatomic, assign) NSInteger pagePush;
@end

@implementation DetailViewController2

-(instancetype)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil{
    self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil];
    if (self) {
        self.hidesBottomBarWhenPushed = YES;
    }
    return self;
}



- (void)viewDidLoad {
    [super viewDidLoad];
    
    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(restartPlayVideo) name:@"reStartVideo" object:nil];
    
    _heightArray = [NSMutableArray array];
    _imageHeightsArray=[NSMutableArray array];
    _textHeightsArray=[NSMutableArray array];
    //播放历史的时候是本地数据，没有user_id,是上个界面传过来的数据，所以不用网络获取数据
    //但是要得到照片高度和文字高度
    if ([self.controllerType isEqualToString:@"playHistoryController"]) {
        [self getHistoryVideoData];
    }else{
        [self initializeUserSource];
    }
    
    
    [self changeNavigation];
    [self.view addSubview:self.tableView];
}


- (void)changeNavigation {
    //修改状态栏颜色
    
    //重新添加一个navigationbar
    _button = [UIButton buttonWithType:UIButtonTypeCustom];
    [_button setTitle:@"返回" forState:UIControlStateNormal];
    [_button setImage:[UIImage imageNamed:@"return"] forState:UIControlStateNormal];
    [_button setImage:[UIImage imageNamed:@"return"] forState:UIControlStateHighlighted];
    [_button setTitleColor:[UIColor whiteColor] forState:UIControlStateNormal];
    [_button setTitleColor:[UIColor whiteColor] forState:UIControlStateHighlighted];
    _button.titleLabel.font = [UIFont systemFontOfSize:15];
    [_button addTarget:self action:@selector(back) forControlEvents:UIControlEventTouchUpInside];
    _button.adjustsImageWhenHighlighted = NO;
    [_button sizeToFit];
    // 一定要在按钮内容有尺寸的时候,设置才有效果
    _button.contentEdgeInsets = UIEdgeInsetsMake(0, -25, 0, 0);
    
    // 设置返回按钮
    self.navigationItem.leftBarButtonItem = [[UIBarButtonItem alloc] initWithCustomView:_button];
}
//重写状态栏颜色
- (UIStatusBarStyle)preferredStatusBarStyle
{
    return UIStatusBarStyleDefault;  //默认黑色
    // return UIStatusBarStyleLightContent; //白色
}
- (void)back {
    [self.navigationController popViewControllerAnimated:YES];
}
- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    
}


- (void)initializeUserSource{
    [[NetworkingHelper shareINstance] GET:self.parameterUrl dict:self.parameterDic succeedData:^(id data) {
        
        [self getCellDataWithData:data];
    } failure:^(NSError *error) {
        NSLog(@"%@",error);
    }];
    
    
}

-(void)getHistoryVideoData{
    
    NSArray *array=[[VideoModelDBManager shareManager] selectAll];
    NSString *share_ids=[NSString string];
    if (array.count-(self.historyIndex+1)>=10) {
        
        for(NSInteger i=self.historyIndex;i<self.historyIndex+10;i++){
            NSString *str=[array objectAtIndex:i];
            NSString *share=[share_ids stringByAppendingString:[NSString stringWithFormat:@"%@,",str]];
            share_ids=share;
        }
    }else{
        for (NSInteger i=self.historyIndex; i<array.count; i++) {
            NSString *str=[array objectAtIndex:i];
            NSString *share=[share_ids stringByAppendingString:[NSString stringWithFormat:@"%@,",str]];
            share_ids=share;
        }
    }
    
    NSMutableString *mutableStr=[[NSMutableString alloc] initWithString:share_ids];
    [mutableStr deleteCharactersInRange:NSMakeRange(share_ids.length-1, 1)];
    NSDictionary *dict=@{@"share_ids":mutableStr};
    [[NetworkingHelper shareINstance] GET:@"User/playHistory" dict:dict succeedData:^(id data) {
        if (data) {
            [self getCellDataWithData:data];
        }
    } failure:^(NSError *error) {
        
    }];
    
}


-(void)getCellDataWithData:(id)data{
    
    _RootModel = [[ShareInfoRootModel alloc]initWithDictionary:data error:nil];
    [_dataSource addObjectsFromArray:_RootModel.list];
    for (int index = 0; index < _dataSource.count; index++) {
        ShareVideosInfoModel *model=  _dataSource[index];
        CGFloat height=[Utils getImageHeightWithUrl:model.share_image withFrameWidth:self.view.width];
        CGFloat textHeight=[Utils changeStationWidth:model.share_name anWidthTxtt:self.view.width anfont:14];
        [self.imageHeightsArray addObject:@(height)];
        [self.textHeightsArray addObject:@(textHeight)];
        [self.heightArray addObject:@(height+textHeight)];
        
    }
    [self.tableView reloadData];
    
    
}
-(UITableView *)tableView{
    if (!_tableView) {
        _tableView=[[UITableView alloc] initWithFrame:CGRectMake(0, 0, self.view.width, self.view.height) style:UITableViewStyleGrouped];
        _tableView.delegate=self;
        _tableView.dataSource=self;
        _tableView.showsVerticalScrollIndicator=NO;
        _tableView.delaysContentTouches=NO;
        _tableView.separatorStyle=UITableViewCellSeparatorStyleNone;
        [_tableView registerNib:[UINib nibWithNibName:kCellId bundle:nil] forCellReuseIdentifier:kCellId];
        _tableView.backgroundColor=[UIColor whiteColor];
        UIView *footerView=[UIView new];
        footerView.backgroundColor=[UIColor clearColor];
        _tableView.tableFooterView=footerView;
        _tableView.sectionFooterHeight=200;
        
        UIView *headerView=[UIView new];
        headerView.backgroundColor=[UIColor clearColor];
        _tableView.tableHeaderView=headerView;
        _tableView.sectionHeaderHeight=0;
    }
    return _tableView;
}


//这里改了 cell.videoView.height=[self.heightArray[indexPath.row] floatValue];
-(UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath{
    DetailViewCell *cell=[tableView dequeueReusableCellWithIdentifier:kCellId forIndexPath:indexPath];
    
    if (nil == cell) {
        cell= [[[NSBundle mainBundle] loadNibNamed:@"DetailViewCell" owner:nil options:nil] lastObject];
        
    }
    
    cell.videoView.height=[self.imageHeightsArray[indexPath.row] floatValue];
    cell.detailModel=_dataSource[indexPath.row];
    if (indexPath.row==0) {
        cell.blackBottomView.hidden=YES;
        cell.blackTopView.hidden=YES;
        
    }
    
    return cell;
}


//这里是为了在tableView加载好后直接播放第一个cell的视频，用self.stateIndexPath对否为空作为标志,为空的话说明是第一次加载进来，播放第一个视频，如果不为空就按照正常方法播放即可
-(void)tableView:(UITableView *)tableView willDisplayCell:(nonnull UITableViewCell *)cell forRowAtIndexPath:(nonnull NSIndexPath *)indexPath{
    NSArray *array=[tableView indexPathsForVisibleRows];
    if ([indexPath row] == ((NSIndexPath *)[[tableView indexPathsForVisibleRows] lastObject]).row) {
        dispatch_async(dispatch_get_main_queue(), ^{
            if (self.stateIndexPath==nil) {
                [self changeCellStateWithIndexPath:array[0]];
            }
            
        });
    }
}
-(void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath{
    if (self.indexPath.row!=indexPath.row) {
        self.indexPath=indexPath;
        
        //点击某个cell，cell往上滚动到最顶端
        [self.tableView scrollToRowAtIndexPath:indexPath atScrollPosition:UITableViewScrollPositionTop animated:YES];
        [self changeCellStateWithIndexPath:self.indexPath];
    }
    
}

-(NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section{
    return self.dataSource.count;
}


-(CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath{
    //  return 200;
    CGFloat height=[self.heightArray[indexPath.row] floatValue] + 95;
    return height;
    
}



//滑动结束
-(void)scrollViewDidEndDecelerating:(UIScrollView *)scrollView{
    
    [self changeCellStateWithIndexPath:self.indexPath];
    // [self changeVideoPlayerFrame];
}
//拖动结束
-(void)scrollViewDidEndDragging:(UIScrollView *)scrollView willDecelerate:(BOOL)decelerate{
    
    
    [self changeCellStateWithIndexPath:self.indexPath];
    
}

//tableView在滚动的时候就触发改变屏幕亮度的方法
-(void)scrollViewDidScroll:(UIScrollView *)scrollView{
    NSArray *array=[self.tableView indexPathsForVisibleRows];
    if (array.count>0) {
        [self changeViewWithFirstWithIndexPathArray:array];
    }
    
}


//根据屏幕中显示的cell数组来判断哪个cell显示
-(void)changeViewWithFirstWithIndexPathArray:(NSArray *)array{
    CGRect frame=[self.tableView rectForRowAtIndexPath:array[0]];
    CGRect newFrame=[self.tableView convertRect:frame toView:self.tableView.superview];
    CGFloat y=fabs(newFrame.origin.y);
    
    if (array.count<=1) { //当数组中只有1个值（不可能没有，最少有1个），说明cell的高度已经满屏，此时单独处理,cell直接是亮的
        self.indexPath=array[0];
        [self changeCellStateWithIndexPath:self.indexPath];
        
        
    }else{//界面有多个cell，第一步：先判断顶端的cell的y值的一半是否已经超过屏幕，如果超出屏幕，则第二个cell亮起来，array中其他都暗下去
        //如果顶端cell还在屏幕中，则顶端cell是亮的，其他是暗的
        //第二步：保存亮着的cell的indexPath，以及cell
        DetailViewCell *cell=(DetailViewCell *)[self.tableView cellForRowAtIndexPath:array[0]];
        if (y<newFrame.size.height/2.0) {//cell还在界面上
            
            self.indexPath=array[0];
            [self changeCellStateWithIndexPath:self.indexPath];
            
            for (int i=1; i<array.count; i++) {
                DetailViewCell *twoCell=(DetailViewCell *)[self.tableView cellForRowAtIndexPath:array[i]];
                twoCell.blackBottomView.hidden=NO;
                cell.blackTopView.hidden=NO;
            }
            
            
        }else{//cell高度的一半已经在屏幕以外
            for (int i=0; i<array.count; i++) {
                DetailViewCell *twoCell=(DetailViewCell *)[self.tableView cellForRowAtIndexPath:array[i]];
                if (i==1) {
                    
                    self.indexPath=array[i];
                    [self changeCellStateWithIndexPath:self.indexPath];
                    
                }else{
                    twoCell.blackBottomView.hidden=NO;
                    twoCell.blackTopView.hidden=NO;
                }
            }
            
        }
        
    }
    
}


//先判断self.indexPath的值有没有改变,
-(void)changeCellStateWithIndexPath:(NSIndexPath *)indexPath{
    
    if (self.stateIndexPath.row != indexPath.row||self.stateIndexPath==nil) {
        self.detailCell=(DetailViewCell *)[self.tableView cellForRowAtIndexPath:indexPath];
        self.detailCell.blackBottomView.hidden=YES;
        self.detailCell.blackTopView.hidden=YES;
        
        if ([ConfigModel shareConfigModel].autoPlayVideo==AutomaticallyPlay&&[ConfigModel shareConfigModel].netStatus==afNetworkReachabilityStatusReachableViaWiFi) {
            
        }
        
        ShareVideosInfoModel *infoModel=self.dataSource[indexPath.row];
        XYVideoModel *videoModel=[[XYVideoModel alloc] init];
        videoModel.url=[NSURL URLWithString:infoModel.video_url];
        videoModel.name=@"";
        self.videPlayer.videoModel=videoModel;
        
        [self.videPlayer.player pause];
        self.videPlayer.link.paused=YES;
        [self.videPlayer.activity stopAnimating];
        
        //播放器
        self.videPlayer.frame=CGRectMake(0, 0, self.detailCell.videoView.frame.size.width, self.detailCell.videoView.frame.size.height);
        //承载播放器的view
        cellFrame=CGRectMake(0, 0, self.detailCell.videoView.frame.size.width, self.detailCell.videoView.frame.size.height);
        [ConfigModel shareConfigModel].videoFrame=cellFrame;
        self.videoPlayerView=[[UIView alloc] initWithFrame:self.detailCell.videoView.frame];
        
        [self.detailCell.videoPlayerView addSubview:self.videPlayer];
        
        //进行后台操作
        [NSThread detachNewThreadSelector:@selector(postNetData) toTarget:self withObject:nil];
        
    }
    //在结尾处把self.stateIndexPath赋值，保留之前的indexPath
    self.stateIndexPath=indexPath;
}

//开辟线程去执行数据库操作，数据库查询可能会浪费时间
-(void)postNetData{
    ShareVideosInfoModel *infoModel=self.dataSource[self.indexPath.row];
    [[VideoModelDBManager shareManager] insertModel:infoModel];
    [self commitPlayCountWithVideoId:infoModel.video_id];
    
}

//上传播放次数
-(void)commitPlayCountWithVideoId:(NSString *)videoId{
    [[NetworkingHelper shareINstance] GET:@"Video/upVideoPlayCount" dict:@{@"video_id":videoId} succeedData:^(id data) {
        if (data) {
            
        }
    } failure:^(NSError *error) {
        
    }];
}
-(void)viewWillAppear:(BOOL)animated
{
    [super viewWillAppear:animated];
    self.navigationController.navigationBar.barTintColor = [UIColor blackColor];
    self.navigationController.navigationBar.barStyle = UIBarStyleBlack;
    [self setNeedsStatusBarAppearanceUpdate];
    self.navigationController.navigationBar.shadowImage = [UIImage new];
    if(self.pagePush==1){
        [self changeCellStateWithIndexPath:self.indexPath];
    }
}


-(void)viewWillDisappear:(BOOL)animated
{
    [super viewWillDisappear:animated];
    self.navigationController.navigationBar.barTintColor=[UIColor whiteColor];
    self.navigationController.navigationBar.barStyle=UIBarStyleDefault;
    [self setNeedsStatusBarAppearanceUpdate];
    self.navigationController.navigationBar.shadowImage=nil;
    
}



#pragma mark XYVideoPlayerViewDelegate
- (void)fullScreenWithPlayerView:(XYVideoPlayerView *)videoPlayerView
{
    
    UIButton *button=[Utils initButtonWithFrame:CGRectMake(20, 30, 40, 30) normalImage:@"shanchu.png" selectImage:nil title:@""];
    button.tintColor=[UIColor redColor];
    [button addTarget:self action:@selector(closeButtonClick) forControlEvents:UIControlEventTouchUpInside];
    self.navigationController.navigationBarHidden=YES;
    [UIView animateWithDuration:0.6 animations:^{
        self.fullScreenVIew=[[UIView alloc] initWithFrame:self.view.bounds];
        self.fullScreenVIew.backgroundColor=[UIColor blackColor];
        self.videPlayer.frame=CGRectMake(0, 0, cellFrame.size.width, cellFrame.size.height);
        UIView *secondView=[[UIView alloc] initWithFrame:CGRectMake(0, (kScreenH-cellFrame.size.height)/2.0, cellFrame.size.width, cellFrame.size.width)];
        [secondView addSubview:self.videPlayer];
        
        [self.fullScreenVIew addSubview:secondView];
        [self.fullScreenVIew addSubview:button];
        [self.view addSubview:self.fullScreenVIew];
        
        
    }];
    //    self.videPlayer.toolView.frame=CGRectMake(0, 400, kScreenW, 44);
    
    
}
//收回全屏
-(void)upFullScreenWIthPlayerView:(XYVideoPlayerView *)videoPlayerView{
    [self closeVideoFullScreenView];
}
-(void)closeButtonClick{
    [[NSNotificationCenter defaultCenter] postNotificationName:@"screenChange" object:nil];
}

-(void)closeVideoFullScreenView{
    [UIView animateWithDuration:0.6 animations:^{
        self.videPlayer.frame=cellFrame;
        // self.videPlayer.frame=CGRectMake(0,0, cellFrame.size.width, cellFrame.size.height);
        [self.detailCell.videoPlayerView addSubview:self.videPlayer];
        
        [self.fullScreenVIew removeFromSuperview];
    }];
    self.navigationController.navigationBarHidden=NO;
}

-(XYVideoPlayerView *)videPlayer{
    if (_videPlayer==nil) {
        _videPlayer=[XYVideoPlayerView videoPlayerView];
        _videPlayer.delegate=self;
        
    }
    return _videPlayer;
}

-(NSMutableArray *)dataSource{
    if (_dataSource==nil) {
        _dataSource=[[NSMutableArray alloc] init];
    }
    return _dataSource;
}

-(void)restartPlayVideo{
    [self.videPlayer.player play];
}

-(void)dealloc{
    [self.videPlayer deallocPlayer];
    [[NSNotificationCenter defaultCenter] removeObserver:self name:@"reStartVideo" object:nil];
}


@end
