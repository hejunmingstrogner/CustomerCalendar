//
//  FirstViewController.m
//  VideoProject_0.1Beta
//
//  Created by once_CH on 16/9/12.
//  Copyright © 2016年 CX. All rights reserved.
//

#import "FirstViewController.h"
#import "HotViewController.h"
#import "AttentionViewController.h"
#import "CityViewController.h"
#import "FunnyViewController.h"
#import "LocaleViewController.h"
#import "FirstBaseViewController.h"
#import "SearchViewController.h"
#import "GetShareCatsModel.h"
#import "GetShareCatsRootModel.h"

//#define BTN_TAG 10020

@interface FirstViewController ()
{
    CGFloat _btnW;/**<  按钮的宽度 */

}
@property (strong, nonatomic) NSMutableArray *dataSource;
//@end
//
//@implementation FirstViewController
@property (nonatomic, strong) UIView *indicatorView;
/** 当前选中的按钮 */
@property (nonatomic, strong) UIButton *selectedButton;
/** 顶部的所有标签 */
@property (nonatomic, strong) UIView *titlesView;
//@property (nonatomic, strong) NSArray *titleArray;
@property (strong, nonatomic) UIScrollView *topScrollView;
@property (assign, nonatomic) NSInteger selectedInt;
@property (strong, nonatomic) NSMutableArray *titleArr;
@property (strong, nonatomic) NSMutableArray *selectedArr;
@property (strong, nonatomic) UIView *searchView;
@end

@implementation FirstViewController

- (void)viewDidLoad {
    [super viewDidLoad];
    self.view.backgroundColor = [UIColor grayColor];
    self.dataSource = [NSMutableArray array];
    self.titleArr = [NSMutableArray array];
    GetShareCatsModel *model = [[GetShareCatsModel alloc]init];
    model.cat_id = @"0";
    model.cat_name = @"热门";
    model.cat_type = @"3";
    [_dataSource addObject:model];
    self.automaticallyAdjustsScrollViewInsets = NO;
    [self initializeUserSource];
    
    if ([[NSUserDefaults standardUserDefaults]objectForKey:@"shareTop"]) {
        [self.titleArr addObjectsFromArray:[[NSUserDefaults standardUserDefaults] objectForKey:@"shareTop"]];
        if (self.titleArr.count >0) {
            [self setupTitlesView];
            [self setupSearchView];
        }
    }
    
}
//隐藏navigation 在将要加载的时候
- (void)viewWillAppear:(BOOL)animated {
    [super viewWillAppear:animated];
    self.navigationController.navigationBarHidden = YES;
}

-(void)viewWillDisappear:(BOOL)animated{
    [super viewWillDisappear:animated];
    self.navigationController.navigationBarHidden=NO;
}
- (void) initializeUserSource {
    
    [[NetworkingHelper shareINstance] GET:@"Share/getShareCats" dict:nil succeedData:^(id data) {
        GetShareCatsRootModel *rootModel = [[GetShareCatsRootModel alloc]initWithDictionary:data error:nil];
        [_dataSource addObjectsFromArray:rootModel.list];
        _selectedArr = [NSMutableArray array];
        for ( int i = 0; i < _dataSource.count; i++) {
            GetShareCatsModel *model = _dataSource[i];
            [_selectedArr addObject:model.cat_name];
        }
        
        [self setupChildViewController];
        
    } failure:^(NSError *error) {
        NSLog(@"%@",error);
    }];
}
- (void)setupChildViewController {
    for (int i = 0; i <self.dataSource.count; i ++) {
        FirstBaseViewController *baseVC = [[FirstBaseViewController alloc]init];
        [self.viewControllers addObject:baseVC];
    }
    //    NSLog(@"%ld",self.viewControllers.count);
    [self.view addSubview:self.switchBackgroundView];
    if (self.topScrollView) {
        [self.topScrollView removeFromSuperview];
        [self.titlesView removeFromSuperview];
        
    }
    NSArray *arr = _selectedArr;
    [[NSUserDefaults standardUserDefaults]setObject:arr forKey:@"shareTop"];
    [self setupTitlesView];
    [self setupSearchView];
}



/**
 * 设置顶部的标签栏
 */
- (void)setupTitlesView
{
    CGFloat width = kScreenW / 5;
    _btnW = width;
    _topScrollView = [[UIScrollView alloc]initWithFrame:CGRectMake(0, 40*kDistanceWidthRatio, kScreenW, 88*kDistanceWidthRatio)];
    [_topScrollView setShowsHorizontalScrollIndicator:NO];
    _topScrollView.backgroundColor = [UIColor colorWithHexString:@"f8f8f8"];
    self.topScrollView.contentSize = CGSizeMake(self.dataSource.count * width , 0);
    [self.view addSubview:self.topScrollView];
    self.titlesView = self.topScrollView;
    
    // 底部的红色指示器
    UIView *indicatorView = [[UIView alloc] init];
    indicatorView.backgroundColor = kColor(254, 27, 98);
    indicatorView.height = 2.0*kDistanceHeightRatio;
    indicatorView.tag = -1;
    indicatorView.y = _titlesView.height - 12.0*kDistanceHeightRatio;
    self.indicatorView = indicatorView;
    // 内部的子标签
    //    CGFloat width = titlesView.width / self.viewControllers.count;
    CGFloat height = _titlesView.height;
    for (NSInteger i = 0; i<self.titleArr.count; i++) {
        UIButton *button = [[UIButton alloc] init];
        button.tag = i;
        button.height = height;
        button.width = width;
        button.y=0*kDistanceHeightRatio;
        button.x = i * width;
        //        GetShareCatsModel *model = self.dataSource[i];
        NSString *title = [NSString stringWithFormat:@"%@",self.titleArr[i]];
        [button setTitle:title forState:UIControlStateNormal];
        [button setTitleColor:kColor(128, 128, 128) forState:UIControlStateNormal];
        //        button.titleLabel.font = [UIFont systemFontOfSize:40];
        [button setTitleColor:kColor(254, 27, 98) forState:UIControlStateDisabled];
        button.titleLabel.font = [UIFont systemFontOfSize:15];
        [button addTarget:self action:@selector(titleClick:) forControlEvents:UIControlEventTouchUpInside];
        [_topScrollView addSubview:button];
        // 默认点击了第一个按钮
        if (i == 0) {
            _selectedInt = 0;
            //            NSLog(@"  button    %ld",button.tag);
            button.enabled = NO;
            self.selectedButton = button;
            // 让按钮内部的label根据文字内容来计算尺寸
            [button.titleLabel sizeToFit];
            self.indicatorView.width = button.titleLabel.width*1.5;
            self.indicatorView.centerX = button.centerX;
            //            NSLog(@"%lf",button.centerX);
        }
    }
    [_titlesView addSubview:indicatorView];
}
#pragma  mark -- 设置顶部搜索栏
- (void)setupSearchView {
    //包括搜索框在内的整个View
    UIView *searchView = [[UIView alloc]initWithFrame:CGRectMake(0, CGRectGetMaxY(self.titlesView.frame) , self.view.width, 70.0*kDistanceHeightRatio)];
    searchView.backgroundColor = kColor(242, 242, 242);
    [self.view addSubview:searchView];
    _searchView = searchView;
    
    //线条
    UIView *lineView = [[UIView alloc]initWithFrame:CGRectMake(0, 0 , self.view.width, 2.0*kDistanceHeightRatio)];
    lineView.backgroundColor = kColor(222, 222, 222);
    [self.searchView addSubview:lineView];
    
    //搜索框,根据线条的位置来决定搜索框的位置
    UIImageView *searchImage = [[UIImageView alloc]initWithFrame:CGRectMake(48.0*kDistanceWidthRatio, CGRectGetMaxY(lineView.bounds) + 14.0*kDistanceHeightRatio, self.view.width-48.0*kDistanceWidthRatio*2, 40.0*kDistanceHeightRatio)];
    searchImage.image = [UIImage imageNamed:@"search"];
    [self.searchView addSubview:searchImage];
    
    //放大镜图标,根据搜索框的位置来决定
    UIImageView *searchImage1 = [[UIImageView alloc]init];
    searchImage1.contentMode=UIViewContentModeScaleAspectFit;
    searchImage1.image = [UIImage imageNamed:@"search-1"];
    [searchImage addSubview:searchImage1];
    
    //根据搜索框和放大镜的位置来决定
    UILabel *titleLabel = [[UILabel alloc]init];
    titleLabel.text = @"大家都在热搜:微微一笑很倾城";
    titleLabel.textColor=kColor(204, 204, 204);
    CGSize size =[titleLabel.text sizeWithAttributes:@{NSFontAttributeName:[UIFont systemFontOfSize:12]}];
    titleLabel.frame = CGRectMake((searchImage.width - size.width)/2.0,  (40*kDistanceWidthRatio - size.height)/2.f, size.width, size.height);
    
    searchImage1.frame =  CGRectMake(CGRectGetMinX(titleLabel.frame) - 40 * kDistanceWidthRatio ,  (40*kDistanceWidthRatio - titleLabel.height*0.8)/2.f, titleLabel.height *0.8, titleLabel.height*0.8);
    titleLabel.textColor = kColor(204, 204, 204);
    titleLabel.font = [UIFont systemFontOfSize:12];
    [searchImage addSubview:titleLabel];
    
    UIButton *but = [[UIButton alloc]initWithFrame:searchImage.bounds];
    but.backgroundColor = [UIColor clearColor];
    [but addTarget:self action:@selector(select_but) forControlEvents:UIControlEventTouchUpInside
     ];
    [self.searchView addSubview:but];
    
}
#pragma  mark -- Events
- (void)select_but {
    
    [self.navigationController pushViewController:[[SearchViewController alloc]init] animated:NO];
    
}
- (void)titleClick:(UIButton *)button
{
//    NSLog(@"tag %ld",button.tag);
//    [self buttonStateChange:button];
    // 滚动
    [self setShowingIndex:button.tag animate:YES];
}

- (void)buttonStateChange:(UIButton *)button
{
    NSLog(@"tag %ld",button.tag);
    self.selectedInt = button.tag;
    // 修改按钮状态
    self.selectedButton.enabled = YES;
    button.enabled = NO;
    self.selectedButton = button;
    [UIView animateWithDuration:0.25 animations:^{
        self.indicatorView.centerX = button.centerX;
    }completion:^(BOOL finished) {
        //获取按钮的下标
        NSInteger idx = button.tag ;
        //判断如果点击的按钮位于第二个到倒数第二个按钮之间,键按钮置于中间显示
        if (idx >2 && idx <self.dataSource.count-2) {
            //设置
            [_topScrollView setContentOffset:CGPointMake((idx -2)*_btnW, 0) animated:YES];
        }
        //如果点击的是钱两个按钮
        else if (idx >= 0 &&idx <=2){
            [_topScrollView setContentOffset:CGPointMake(0, 0) animated:YES];
        }
        //如果点击的是后两个按钮
        else if (idx >= self.dataSource.count-2){
            [_topScrollView setContentOffset:CGPointMake((self.dataSource.count -5)*_btnW, 0) animated:YES];
        }
    }];
}

#pragma mark -SJSwitchViewControllerDelegate

- (NSInteger)numberOfSwitchViewController
{
    return self.viewControllers.count;
}

- (UIViewController *)switchViewControllerDidGetViewControllerAtIndex:(NSUInteger)index
{
    FirstBaseViewController *vc = self.viewControllers[index];
    GetShareCatsModel *model = self.dataSource[index];
    vc.cat_id = model.cat_id;
    return vc;
}

-(void)switchViewControllerDidStopAtIndex:(NSInteger)index
{
//    NSLog(@"sshjhjj");
    UIButton *button = self.titlesView.subviews[index + 1];
    //    UIButton *but = (UIButton *)[self.view viewWithTag:index ];
    [self buttonStateChange:button];
}
- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    self.view = nil;
    // Dispose of any resources that can be recreated.
}

@end
