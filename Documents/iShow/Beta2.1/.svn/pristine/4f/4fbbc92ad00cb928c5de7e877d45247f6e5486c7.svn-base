//
//  VideoRecordedViewController.m
//  VideoProject_0.1Beta
//
//  Created by once_CH on 2016/10/17.
//  Copyright © 2016年 CX. All rights reserved.
//

#import "VideoRecordedViewController.h"
#import "RecordEngine.h"
#import "RecordProgressView.h"
#import <MobileCoreServices/MobileCoreServices.h>
#import <MediaPlayer/MediaPlayer.h>
#import "EditVideoViewController.h"
#import "EffectsViewController.h"
typedef NS_ENUM(NSUInteger, UploadVieoStyle) {
    VideoRecord = 0,
    VideoLocation,
};

@interface VideoRecordedViewController ()<RecordEngineDelegate,UIImagePickerControllerDelegate,UINavigationControllerDelegate>
@property (strong, nonatomic) NSArray *imageArr;

@property (assign, nonatomic) NSInteger countTag;
@property (strong, nonatomic) RecordEngine *recordEngine;
@property (assign, nonatomic) BOOL allowRecord;//允许录制
@property (assign, nonatomic) UploadVieoStyle videoStyle;//视频的类型
@property (strong, nonatomic) UIImagePickerController *moviePicker;//视频选择器
@property (strong, nonatomic) MPMoviePlayerViewController *playerVC;
@property (strong, nonatomic) UIView *headerView;
@property (strong, nonatomic) UIView *footerView;
@property (strong, nonatomic) RecordProgressView *progressView;
@property (strong, nonatomic) UIButton *recordBt;
@property (strong, nonatomic) UIButton *recordNextBT;
@property (strong, nonatomic) UIButton *recordCancelBT;
@property (strong, nonatomic) UINavigationController *nav;
@property (strong, nonatomic) EffectsViewController *eit;
@end

@implementation VideoRecordedViewController
- (void)viewWillAppear:(BOOL)animated {
    [super viewWillAppear:animated];
    [self.navigationController setNavigationBarHidden:YES animated:YES];
    [[UIApplication sharedApplication] setStatusBarHidden:TRUE];
}
- (void)dealloc {
    _recordEngine = nil;
    [[NSNotificationCenter defaultCenter] removeObserver:self name:MPMoviePlayerPlaybackDidFinishNotification object:[_playerVC moviePlayer]];
    [_timer invalidate];
}
- (void)viewDidAppear:(BOOL)animated {
    [super viewDidAppear:animated];
    if (_recordEngine == nil) {
        [self.recordEngine previewLayer].frame = CGRectMake(0, 80*kDistanceWidthRatio, kScreenW, 818*kDistanceWidthRatio);
        [self.view.layer insertSublayer:[self.recordEngine previewLayer] atIndex:0];
    }
    [self.recordEngine startUp];
}
//隐藏状态栏
- (BOOL)prefersStatusBarHidden
{
    return YES;
}
- (void)viewDidDisappear:(BOOL)animated {
    [super viewDidDisappear:animated];
    [self.recordEngine shutdown];
    self.navigationController.navigationBarHidden = NO;
//[[UIApplication sharedApplication] setStatusBarHidden:false];
    
//    [_timer invalidate];
}

- (void)viewDidLoad {
    [super viewDidLoad];
    _countTag = 100;
    // Do any additional setup after loading the view.
    self.allowRecord = YES;
    self.view.backgroundColor = [UIColor blackColor];
    _imageArr = @[@"Shut-down",@"light",@"Shape-1-copy-48"];
    for (int i = 0; i < _imageArr.count; i ++) {
        [self addTopButton:_imageArr[i] poin:CGPointMake(450*kDistanceWidthRatio + 120*kDistanceWidthRatio*i, 45*kDistanceWidthRatio )];
    }
    [self.footerView addSubview:self.recordBt];
    [self.footerView addSubview:self.progressView];
    [self.footerView addSubview:self.recordNextBT];
    [self.footerView addSubview:self.recordCancelBT];
    
    label = [[UILabel alloc]init];
    label.frame = CGRectMake((kScreenW- 150)/2.f, CGRectGetMinY(self.footerView.frame) + 36*kDistanceWidthRatio, 150, 30);
    label.text = @"0.0";
    label.font = [UIFont fontWithName:@"Arial" size:16.f];
    label.textColor = [UIColor whiteColor];
    label.textAlignment=1;
//    label.backgroundColor = [UIColor whiteColor];
    [self.view addSubview:label];
    
    _timer = [NSTimer scheduledTimerWithTimeInterval:0.1 target:self selector:@selector(timeStart) userInfo:nil repeats:YES];
    [_timer setFireDate:[NSDate distantFuture]];
    _eit = [[EffectsViewController alloc]init];
    _nav = [[UINavigationController alloc] initWithRootViewController:self];
    _nav.viewControllers = @[_eit];

//    NSLog(@"**********  %@",_recordEngine.videoPath);
}



//根据状态调整view的展示情况
- (void)adjustViewFrame {
    [self.view layoutIfNeeded];
    [UIView animateWithDuration:0.4 delay:0.0 options:UIViewAnimationOptionCurveEaseInOut animations:^{
        if (self.recordBt.selected) {
            self.headerView.frame = CGRectMake(0, - (80*kDistanceWidthRatio), kScreenW, 80*kDistanceWidthRatio);
            self.recordNextBT.alpha = 0;
            self.recordCancelBT.alpha = 0;
        }else {
            self.headerView.frame = CGRectMake(0, 0, kScreenW,  80*kDistanceWidthRatio);
            if (seconds>2 || minutes > 0) {
                self.recordNextBT.alpha = 1;
            }
            self.recordCancelBT.alpha = 1;
        }
    } completion:nil];
}
- (void)addTopButton:(NSString *)imageName poin:(CGPoint )point {
    UIButton *butt = [UIButton buttonWithType:UIButtonTypeCustom];
    [butt setImage:[UIImage imageNamed:imageName] forState:UIControlStateNormal];
    [butt setImage: [UIImage imageNamed:imageName] forState:UIControlStateHighlighted];
    //    butt.frame = CGRectMake(100, 100, 100, 100);
    butt.bounds = CGRectMake(0, 0, 38*kDistanceWidthRatio, 44*kDistanceWidthRatio);
    butt.clipsToBounds = YES;
    butt.center = point;
    butt.tag = _countTag ++;
    switch (butt.tag) {
        case 100:
            butt.center = CGPointMake(36*kDistanceWidthRatio, 45*kDistanceWidthRatio);
            butt.bounds = CGRectMake(0, 0, 32*kDistanceWidthRatio, 32*kDistanceWidthRatio);
            break;
        case 101:
            butt.bounds = CGRectMake(0, 0, 37*kDistanceWidthRatio, 48*kDistanceWidthRatio);
            [butt setImage:[UIImage imageNamed:@"selectLightning"] forState:UIControlStateSelected];
            break;
        case 102:
            butt.bounds = CGRectMake(0, 0, 41*kDistanceWidthRatio, 42*kDistanceWidthRatio);
            break;
        default:
            break;
    }
    [butt addTarget:self action:@selector(actionTopButton:) forControlEvents:UIControlEventTouchUpInside];
    [self.headerView addSubview:butt];
}



#pragma mark -- Events

- (void)actionTopButton:(UIButton *)sender {
//    if (sender.tag == 101) {
//
//    }
    UIButton *butt = [(UIButton *)self.view viewWithTag:101];
    switch (sender.tag) {
        case 100:
            [self dismissAction];
            break;
        case 101:
            [self flashLightAction:sender];
            break;
        case 102:
            
            butt.selected = NO;
            [self.recordEngine closeFlashLight];
            [self changeCameraAction:sender];
            break;
        default:
            break;
    }
}
//返回点击事件
- (void)dismissAction {
    [self dismissViewControllerAnimated:YES completion:nil];
}
//开关闪光灯
- (void)flashLightAction:(UIButton *)sender {
    UIButton *button = [(UIButton *)self.view viewWithTag:103];
    if (button.selected == NO) {
        sender.selected = !sender.selected;
        if (sender.selected == YES) {
            [self.recordEngine openFlashLight];
        }else {
            [self.recordEngine closeFlashLight];
        }
    }
}
//切换前后摄像头
- (void)changeCameraAction:(UIButton *)sender {
    UIButton *button = [(UIButton *)self.view viewWithTag:102];
    sender.selected = !sender.selected;
    if (sender.selected == YES) {
        //前置摄像头
        [self.recordEngine closeFlashLight];
        button.selected = NO;
        [self.recordEngine changeCameraInputDeviceisFront:YES];
    }else {
        [self.recordEngine changeCameraInputDeviceisFront:NO];
    }
}
//更改滤镜
- (void)changeBoy {
    [self presentViewController:_nav animated:YES completion:nil];
    
}
//开始和暂停录制事件
- (void)recordAction:(UIButton *)sender {
    
    if (self.allowRecord) {
        self.videoStyle = VideoRecord;
        self.recordBt.selected = !self.recordBt.selected;
        if (self.recordBt.selected) {
            if (self.recordEngine.isCapturing) {
                [self.recordEngine resumeCapture];//继续录制
//                NSLog(@"@@@@@@@2 %@",_recordEngine.videoPath);

                [_timer setFireDate:[NSDate date]];
            }else {
                [self.recordEngine startCapture];//开始录制
                [_timer setFireDate:[NSDate date]];
            }
        }else {
            [self.recordEngine pauseCapture];//暂停录制
            [_timer setFireDate:[NSDate distantFuture]];
            
        }
        [self adjustViewFrame];
    }
//    NSLog(@"-----------%@",self.recordEngine.videoPath);
}
-(void)timeStart{
    persent++;
    if (persent==10) {
        seconds++;
        persent = 0;
        if (seconds ==60) {
            minutes++;
            seconds = 0;
        }
    }
    if (minutes > 0) {
        label.text = [NSString stringWithFormat:@"%01d:%01d.%01d",minutes,seconds,persent];
    } else {
      label.text = [NSString stringWithFormat:@"%01d.%01d",seconds,persent];
    }
    
    if (minutes == 3) {
        label.text = [NSString stringWithFormat:@"3:0.0"];
    }
    
}
//录制下一步点击事件
- (void)recordNextAction:(UIButton *)sender {
    if (_recordEngine.videoPath.length > 0) {
        _eit.isDiss = YES;
        _eit.videoURL = _recordEngine.videoPath;
//        NSLog(@"      sassss  %@",_recordEngine.videoPath);
//        __weak typeof(self) weakSelf = self;
        [self.recordEngine stopCaptureHandler:^(UIImage *movieImage) {
//        _eit.saveRecordEngine = self.recordEngine;
            minutes = 0;
            persent = 0;
            seconds = 0;
            label.text = @"0.0";
            [self presentViewController:self.nav animated:YES completion:nil];
        }];
    }else {
        NSLog(@"请先录制视频~");
    }
}
//删除已录制的视频
- (void)recordCancelAction:(UIButton *)sender {
    if (sender.selected == YES) {
        minutes = 0;
        seconds = 0;
        persent = 0;
        label.text = [NSString stringWithFormat:@"%01d.%01d",seconds,persent];
        [UIView animateWithDuration:0 animations:^{
            [_recordEngine shutdown];
        } completion:^(BOOL finished) {
            [self.recordEngine startUp];
        }];
    }
    sender.selected = !sender.selected;
}


//当点击Done按键或者播放完毕时调用此函数
- (void) playVideoFinished:(NSNotification *)theNotification {
    MPMoviePlayerController *player = [theNotification object];
    [[NSNotificationCenter defaultCenter] removeObserver:self name:MPMoviePlayerPlaybackDidFinishNotification object:player];
    [player stop];
    [self.playerVC dismissMoviePlayerViewControllerAnimated];
    self.playerVC = nil;
}


#pragma mark - set、get方法
- (RecordEngine *)recordEngine {
    if (_recordEngine == nil) {
        _recordEngine = [[RecordEngine alloc] init];
        _recordEngine.delegate = self;
        
//        NSLog(@"@@@@@@@@@   %@",_recordEngine.videoPath);
        
    }
    return _recordEngine;
}

- (UIImagePickerController *)moviePicker {
    if (_moviePicker == nil) {
        _moviePicker = [[UIImagePickerController alloc] init];
        _moviePicker.delegate = self;
        _moviePicker.sourceType = UIImagePickerControllerSourceTypePhotoLibrary;
        _moviePicker.mediaTypes = @[(NSString *)kUTTypeMovie];
    }
    return _moviePicker;
}

- (UIView *)headerView {
    if (!_headerView) {
        _headerView = [[UIView alloc]initWithFrame:CGRectMake(0, 0, kScreenW, 22 + 90*kDistanceWidthRatio)];
        [self.view addSubview:_headerView];
    }
    return _headerView;
}
- (UIView *)footerView {
    if (_footerView== nil) {
        _footerView = [[UIView alloc]initWithFrame:CGRectMake(0,(80 + 818)*kDistanceWidthRatio, kScreenW, 344*kDistanceWidthRatio)];
        _footerView.backgroundColor = [UIColor blackColor];
//        _footerView.backgroundColor = [UIColor orangeColor];
        [self.view addSubview:_footerView];
    }
    return _footerView;
}
- (UIButton *)recordBt {
    if (!_recordBt) {
        _recordBt = [UIButton buttonWithType:UIButtonTypeCustom];
        _recordBt.frame = CGRectMake((kScreenW - 170 * kDistanceWidthRatio)/2.f, (32+88+36)*kDistanceWidthRatio, 170 * kDistanceWidthRatio, 170 * kDistanceWidthRatio);
        [_recordBt setImage: [UIImage imageNamed:@"Button"] forState:UIControlStateNormal];
        [_recordBt setImage:[UIImage imageNamed:@"Button"] forState:UIControlStateHighlighted];
        [_recordBt addTarget:self action:@selector(recordAction:) forControlEvents:UIControlEventTouchUpInside];
    }
    return _recordBt;
}
- (UIButton *)recordNextBT {
    if (!_recordNextBT) {
        _recordNextBT = [UIButton buttonWithType:UIButtonTypeCustom];
        _recordNextBT.frame = CGRectMake(kScreenW - 180*kDistanceWidthRatio, 190*kDistanceWidthRatio, 88 * kDistanceWidthRatio, 88 * kDistanceWidthRatio);
        [_recordNextBT setImage: [UIImage imageNamed:@"Determine-1"] forState:UIControlStateNormal];
        [_recordNextBT setImage:[UIImage imageNamed:@"Determine-1"] forState:UIControlStateHighlighted];
        [_recordNextBT addTarget:self action:@selector(recordNextAction:) forControlEvents:UIControlEventTouchUpInside];
    }
    return _recordNextBT;
}

- (UIButton *)recordCancelBT {
    if (!_recordCancelBT) {
        _recordCancelBT = [UIButton buttonWithType:UIButtonTypeCustom];
        _recordCancelBT.frame = CGRectMake(98*kDistanceWidthRatio, 190*kDistanceWidthRatio, 88 * kDistanceWidthRatio, 88 * kDistanceWidthRatio);
        [_recordCancelBT setImage: [UIImage imageNamed:@"cancel-2"] forState:UIControlStateNormal];
        [_recordCancelBT setImage:[UIImage imageNamed:@"cancel-2"] forState:UIControlStateHighlighted];
        [_recordCancelBT setImage:[UIImage imageNamed:@"delete"] forState:UIControlStateSelected];
        _recordCancelBT.selected = NO;
        [_recordCancelBT addTarget:self action:@selector(recordCancelAction:) forControlEvents:UIControlEventTouchUpInside];
    }
    return _recordCancelBT;
}


- (RecordProgressView *)progressView {
    if (!_progressView) {
        _progressView = [[RecordProgressView alloc]initWithFrame:CGRectMake(0, 0, kScreenW, 2)];
        _progressView.backgroundColor = [UIColor clearColor];
        _progressView.progressBgColor = [UIColor colorWithWhite:0 alpha:0.1];
        _progressView.progressColor = kColor(251, 0, 100);
    }
    return _progressView;
}

#pragma mark - Apple相册选择代理
//选择了某个照片的回调函数/代理回调
- (void)imagePickerController:(UIImagePickerController *)picker didFinishPickingMediaWithInfo:(NSDictionary *)info {
    if ([[info objectForKey:UIImagePickerControllerMediaType] isEqualToString:(NSString*)kUTTypeMovie]) {
        //获取视频的名称
        NSString * videoPath=[NSString stringWithFormat:@"%@",[info objectForKey:UIImagePickerControllerMediaURL]];
        NSRange range =[videoPath rangeOfString:@"trim."];//匹配得到的下标
        NSString *content=[videoPath substringFromIndex:range.location+5];
        //视频的后缀
        NSRange rangeSuffix=[content rangeOfString:@"."];
        NSString * suffixName=[content substringFromIndex:rangeSuffix.location+1];
        //如果视频是mov格式的则转为MP4的
        if ([suffixName isEqualToString:@"MOV"]) {
            NSURL *videoUrl = [info objectForKey:UIImagePickerControllerMediaURL];
            __weak typeof(self) weakSelf = self;
            [self.recordEngine changeMovToMp4:videoUrl dataBlock:^(UIImage *movieImage) {
                
                [weakSelf.moviePicker dismissViewControllerAnimated:YES completion:^{
                    weakSelf.playerVC = [[MPMoviePlayerViewController alloc] initWithContentURL:[NSURL fileURLWithPath:weakSelf.recordEngine.videoPath]];
                    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(playVideoFinished:) name:MPMoviePlayerPlaybackDidFinishNotification object:[weakSelf.playerVC moviePlayer]];
                    [[weakSelf.playerVC moviePlayer] prepareToPlay];
                    
                    [weakSelf presentMoviePlayerViewControllerAnimated:weakSelf.playerVC];
                    [[weakSelf.playerVC moviePlayer] play];
                }];
            }];
        }
    }
}

#pragma mark - RecordEngineDelegate
- (void)recordProgress:(CGFloat)progress {
    if (progress >= 1) {
        [self recordAction:self.recordBt];
        self.allowRecord = NO;
    }
    self.progressView.progress = progress;
}



@end
