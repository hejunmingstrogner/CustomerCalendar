/*
 *
 * Copyright 2014 by MotionPortrait, Inc.
 *
 * All rights reserved.
 *
 */

#ifndef MPFACEFP_H_
#define MPFACEFP_H_

#include "mptypes.h"

namespace motionportrait {


class MpFace;


/**
 * \class MpFacefp
 */
class MpFacefp {

public:

    static const int NUM_FP_MOUTH2 = 6;
    static const int NUM_FP_NOSE   = 6;
    static const int NUM_FP_EYEBROW = 14;
    static const int NUM_FP_EYE = 6;
    typedef struct {
        mpVector2 point[NUM_FP_MOUTH2];
        int       isMouthOpen;
    } FeaturePointMouth2;
    typedef struct {
        mpVector2 point[NUM_FP_NOSE];
    } FeaturePointNose;
    typedef struct {
        mpVector2 point[NUM_FP_EYEBROW];
    } FeaturePointEyebrow;
    typedef struct {
        mpVector2 right[NUM_FP_EYE];
        mpVector2 left[NUM_FP_EYE];
    } FeaturePointEye;

    /**
     * get/set mouth2 feature point
     *
     * \param face          face instance
     * \param faceObject    face object generated by MySynth::Synth()
     * \param fpoint        feature point
     */
    static mpResult GetMouth2(MpFace& face,            FeaturePointMouth2 &fpoint);
    static mpResult SetMouth2(MpFace& face,            FeaturePointMouth2 &fpoint);
    static mpResult GetMouth2(mpFaceObject faceObject, FeaturePointMouth2 &fpoint);
    static mpResult SetMouth2(mpFaceObject faceObject, FeaturePointMouth2 &fpoint);

    /**
     * get/set nose feature point
     *
     * \param face          face instance
     * \param faceObject    face object generated by MySynth::Synth()
     * \param fpoint        feature point
     */
    static mpResult GetNose(MpFace& face,            FeaturePointNose &fpoint);
    static mpResult SetNose(MpFace& face,            FeaturePointNose &fpoint);
    static mpResult GetNose(mpFaceObject faceObject, FeaturePointNose &fpoint);
    static mpResult SetNose(mpFaceObject faceObject, FeaturePointNose &fpoint);

    /**
     * get/set eyebrow feature point
     *
     * \param face          face instance
     * \param faceObject    face object generated by MySynth::Synth()
     * \param fpoint        feature point
     */
    static mpResult GetEyebrow(MpFace& face,            FeaturePointEyebrow &fpoint);
    static mpResult SetEyebrow(MpFace& face,            FeaturePointEyebrow &fpoint);
    static mpResult GetEyebrow(mpFaceObject faceObject, FeaturePointEyebrow &fpoint);
    static mpResult SetEyebrow(mpFaceObject faceObject, FeaturePointEyebrow &fpoint);

    /**
     * get/set eyefeature point
     *
     * \param face          face instance
     * \param faceObject    face object generated by MySynth::Synth()
     * \param fpoint        feature point
     */
    static mpResult GetEye(MpFace& face,            FeaturePointEye &fpoint);
    static mpResult SetEye(MpFace& face,            FeaturePointEye &fpoint);
//    static mpResult GetEye(mpFaceObject faceObject, FeaturePointEye &fpoint);
//    static mpResult SetEye(mpFaceObject faceObject, FeaturePointEye &fpoint);

    MpFacefp() {}
    virtual ~MpFacefp() {}

};

}  // namespace motionportrait

#endif /* MPFACEFP_H_ */
