//
//  SecoundChildBaseViewController.m
//  VideoProject_0.1Beta
//
//  Created by once_CH on 16/9/19.
//  Copyright © 2016年 CX. All rights reserved.
//

#import "SecoundChildBaseViewController.h"
#import "MUCollectionViewFlowLayout.h"
#import "ThemeListRootModel.h"
#import "ThemeListModel.h"
#import "BannerModel.h"
#import "BannerRootModel.h"
#import "SecoundBaseCell.h"
//#import "SecoundCell.h"
#import "ScrollView.h"
#import "MakeViewController.h"
#import "UIImage+MultiFormat.h"
//#import "MyDataBase.h"
static NSString * const banner_location = @"home";
static NSString * const  footerID = @"CXFooterID";
static NSString *const  CellID = @"cellID";
static NSString *const headerID = @"CXHeaderID";


@interface SecoundChildBaseViewController ()<UICollectionViewDelegate,UICollectionViewDataSource,MUCollectionViewFlowLayoutDelegate,CellDidSelectDelegate>


@property (nonatomic,strong) UICollectionView *collectionView;
@property (nonatomic,strong) NSMutableArray *dataSource;

@property (nonatomic,assign) int pageCount;
@property (nonatomic,strong) ScrollView *scrollView;
@property (nonatomic ,strong) NSMutableArray *bannerArray;
@property (nonatomic,strong)NSMutableArray * heightArray;
@property (nonatomic,strong)UIImage * image;
//@property (strong, nonatomic) FMDatabase *db;

@end

@implementation SecoundChildBaseViewController

-(void)initCollectionView{
    MUCollectionViewFlowLayout *layout=[[MUCollectionViewFlowLayout alloc] init];
    layout.minimumLineSpacing=10;
    layout.minimumInteritemSpacing=10;
    layout.sectionInsets=UIEdgeInsetsMake(10, 0, 10, 0);
    layout.columnCount=1;
    CGFloat y=kNavigationBarHeight;
    BaseCollectionVIew *collectionView=[[BaseCollectionVIew alloc] initWithFrame:CGRectMake(0, y +68.0*kDistanceHeightRatio, self.view.width, self.view.height - 68 - 49) collectionViewLayout:layout];
    collectionView.cellType=secondCell;
    collectionView.cellDelegate=self;
    collectionView.paraDic = _cat_id;
    collectionView.bannerDict=@{@"banner_location":@"home"};
    collectionView.urlString=@"theme/getthemes";
    [collectionView loadDataSource];
    [self.view addSubview:collectionView];

}

//-(void)cellDidSelectedWithThemeModel:(ThemeListModel *)model{
//    MakeViewController *makeVc = [[MakeViewController alloc]init];
//    makeVc.theme_id = model.theme_id;
//    [self.navigationController pushViewController:makeVc animated:YES];
//}


- (void)viewDidLoad {
    [super viewDidLoad];
    //用封装的方法写collectionView
    [self initCollectionView];
    
    
    
    
//    _pageCount = 1;
//    // Do any additional setup after loading the view.
//    _dataSource = [NSMutableArray array];
//    self.view.backgroundColor = [UIColor groupTableViewBackgroundColor];
//    [self initializeUserSource];
//    [self addScrollViewDataSource];
//    [self.view addSubview:self.collectionView];
//    self.collectionView.mj_header = [MJRefreshNormalHeader headerWithRefreshingTarget:self refreshingAction:@selector(loadNewData)];
//    self.collectionView.mj_footer = [MJRefreshBackNormalFooter  footerWithRefreshingTarget:self refreshingAction:@selector(loadMoreData)];
////    [MyDataBase sharedDataBase]
    
}
//#pragma  mark -- Event
//- (void)loadNewData {
//    [self.dataSource removeAllObjects];
//    _pageCount = 1;
//    [self initializeUserSource];
//}
//
//- (void)loadMoreData {
//    _pageCount ++;
//    [self initializeUserSource];
//}
//- (void)initializeUserSource{
//    [[NetworkingHelper shareINstance] GET:@"theme/getthemes" dict:@{@"page":@(_pageCount),@"cat_id":_cat_id} succeed:^(id data) {
//
//        ThemeListRootModel *TheleRootModel = [[ThemeListRootModel alloc]initWithDictionary:data[@"values"] error:nil];
//        [_dataSource addObjectsFromArray:TheleRootModel.list];
//        for (int index = 0; index < _dataSource.count; index++) {
//            ThemeListModel *model =  _dataSource[index];
//            [self p_putImageWithURL:model.theme_image];
//        }
//        [self.collectionView reloadData];
//        [self.collectionView.mj_header endRefreshing];
//        [self.collectionView.mj_footer endRefreshing];
//    } failure:^(NSError *error) {
//        NSLog(@"%@",error);
//        [self.collectionView.mj_header endRefreshing];
//        [self.collectionView.mj_footer endRefreshing];
//    }];
//}
//- (void)addScrollViewDataSource {
//    //轮播图
//    [[NetworkingHelper shareINstance] GET:@"Banner/getBanner" dict:@{@"banner_location":banner_location} succeed:^(id data) {
//
//        BannerRootModel *rootModel = [[BannerRootModel alloc]initWithDictionary:data[@"values"] error:nil];
//        [self.bannerArray addObjectsFromArray:rootModel.list];
//        self.scrollView.modelArray = self.bannerArray;
//    } failure:^(NSError *error) {
//        NSLog(@"%@",error);
//    }];
//
//}
//- (void)p_putImageWithURL:(NSString *)url
//{
//    // 获取图片
//    CGSize  size = [ImageSize dowmLoadImageSizeWithURL:url];
//    
//    // 判断是否为空  为空则下载图片然后计算图片尺寸
//    if (size.height == 0) {
//        _image = [UIImage sd_imageWithData:[NSData dataWithContentsOfURL:[NSURL URLWithString:url]]];
//        // 获取图片的高度并按比例压缩
//        NSInteger itemHeight = _image.size.height * (((self.view.width - 20)  / _image.size.width));
//        NSNumber * number = [NSNumber numberWithInteger:itemHeight];
//        
//        [self.heightArray addObject:number];
//        return;
//    }
//    // 获取图片的高度并按比例压缩
//    NSInteger itemHeight = size.height * (((self.view.width - 30)  / size.width));
//    //    if (itemHeight > 280) {
//    //        itemHeight = 210;
//    //    }
//    NSNumber * number = [NSNumber numberWithInteger:itemHeight];
//    [self.heightArray addObject:number];
//}
//
//
//#pragma  mark --UICollectionViewDelegate & UICollectionViewDataSource & MUCollectionViewFlowLayoutDelegate
//- (void)collectionView:(UICollectionView *)collectionView didSelectItemAtIndexPath:(NSIndexPath *)indexPath {
//    MakeViewController *makeVc = [[MakeViewController alloc]init];
////    _makeVc.theme_id = 
//    ThemeListModel *model = self.dataSource[indexPath.row];
//    makeVc.theme_id = model.theme_id;
//    [self.navigationController pushViewController:makeVc animated:YES];
//}
//- (UICollectionViewCell *)collectionView:(UICollectionView *)collectionView cellForItemAtIndexPath:(NSIndexPath *)indexPath {
//    //    FirstBaseCell *cell
//    SecoundBaseCell *cell = [collectionView dequeueReusableCellWithReuseIdentifier:CellID forIndexPath:indexPath];
//    cell.backgroundColor = [UIColor whiteColor];
//    cell.model = self.dataSource[indexPath.row];
//    return cell;
//}
//- (CGFloat) collectionView:(UICollectionView *)collectionView layout:(UICollectionViewLayout *)collectionViewLayout heightForItemAtIndexPath:(NSIndexPath *)indexPath {
//    
////    NSLog(@"%lf",[self.heightArray[indexPath.row] floatValue]);
////    return 150 + arc4random_uniform(100);
//    if ([self.heightArray[indexPath.row] integerValue] > 50) {
//        return [self.heightArray[indexPath.row] integerValue] + 50;
//    } else {
//        return 300;
//    }
//}
//
//- (CGSize)collectionView:(UICollectionView *)collectionView layout:(UICollectionViewLayout*)collectionViewLayout referenceSizeForHeaderInSection:(NSInteger)section {
//    return CGSizeMake(kScreenW, kScrollHeight);
//}
//
//- (CGSize)collectionView:(UICollectionView *)collectionView layout:(UICollectionViewLayout *)collectionViewLayout referenceSizeForFooterInSection:(NSInteger)section {
//    return CGSizeMake(self.view.width, 2);
//}
//- (UICollectionReusableView *)collectionView:(UICollectionView *)collectionView viewForSupplementaryElementOfKind:(NSString *)kind atIndexPath:(NSIndexPath *)indexPath
//{
//    //    UICollectionReusableView  *headerView=nil;
//    if (kind == CZCollectionElementKindSectionHeader) {
//        UICollectionReusableView * headerView = [collectionView dequeueReusableSupplementaryViewOfKind:kind withReuseIdentifier:headerID forIndexPath:indexPath];
//        
//        [headerView addSubview:self.scrollView];
//        return headerView;
//    } else if (kind == CZCollectionElementKindSectionFooter) {
//        UICollectionReusableView *footer = [collectionView dequeueReusableSupplementaryViewOfKind:kind withReuseIdentifier:footerID forIndexPath:indexPath];
//        return footer;
//    }
//    return nil;
//}
//- (NSInteger)collectionView:(UICollectionView *)collectionView numberOfItemsInSection:(NSInteger)section {
//        return self.dataSource.count;
//}
//
//#pragma mark -- Getter
//- (UICollectionView *)collectionView {
//    if (!_collectionView) {
//        MUCollectionViewFlowLayout * layout = [[MUCollectionViewFlowLayout alloc] init];
//        layout.minimumLineSpacing = 10;
//        layout.minimumInteritemSpacing = 10;
//        layout.sectionInsets = UIEdgeInsetsMake(10, 10, 10, 10);
//        layout.columnCount = 1;
//        //        layout.delegate = self;
//        CGFloat y=kNavigationBarHeight;
//        _collectionView = [[UICollectionView alloc]initWithFrame:CGRectMake(0, y +68.0*kDistanceHeightRatio, self.view.width, self.view.height - 68 - 49) collectionViewLayout:layout];
//        _collectionView.dataSource = self;
//        _collectionView.delegate = self;
//        _collectionView.backgroundColor = kColor(242, 242, 242);
//        [_collectionView registerNib:[UINib nibWithNibName:@"SecoundBaseCell" bundle:nil] forCellWithReuseIdentifier:CellID];
//        [_collectionView registerClass:[UICollectionReusableView class] forSupplementaryViewOfKind:CZCollectionElementKindSectionHeader withReuseIdentifier:headerID];
//        [_collectionView registerClass:[UICollectionReusableView class] forSupplementaryViewOfKind:CZCollectionElementKindSectionFooter withReuseIdentifier:footerID];
//        [self.view addSubview:_collectionView];
//    }
//    return _collectionView;
//    
//}
//- (ScrollView *)scrollView {
//    if (!_scrollView) {
//        _scrollView = [[ScrollView alloc]initWithFrame:CGRectMake(0, 0, self.view.width, kScrollHeight)];
//    }
//    return _scrollView;
//}
//- (NSMutableArray *)bannerArray {
//    if (!_bannerArray) {
//        _bannerArray = [NSMutableArray array];
//    }
//    return _bannerArray;
//}
//
//- (NSMutableArray *)heightArray {
//    if (!_heightArray) {
//        _heightArray = [NSMutableArray array];
//        
//    }
//    return _heightArray;
//}
//

@end
