
//
//  FirstBaseViewController.m
//  VideoProject_0.1Beta
//
//  Created by once_CH on 16/9/21.
//  Copyright © 2016年 CX. All rights reserved.
//

#import "UserDetailController.h"
#import "MUCollectionViewFlowLayout.h"
#import "DetailViewController.h"
#import "UserHeaderView.h"
#import "ShareListModel.h"
#import "BaseLayoutCell.h"

#define kCell @"BaseCell"
#define kMineCell @"BaseLayoutCell"
#define kHeader @"UserHeaderView"
static NSString *const CXFooterCell = @"CXFooterCell";
@interface UserDetailController ()<UICollectionViewDelegate,UICollectionViewDataSource,MUCollectionViewFlowLayoutDelegate>
@property (nonatomic , assign) int total;

@property (nonatomic ,strong) NSMutableArray *dataSource;
@property (nonatomic, strong) UICollectionView *collectionView;
@property (nonatomic, strong) NSMutableArray *imagesHeightArray;
@property (nonatomic, strong) NSMutableArray *textHeightsArray;
@property (nonatomic,strong)  NSMutableArray * heightArray;// 存储图片高度的数组
@property (nonatomic, assign) int pageCount;
@property (nonatomic, strong) UIButton *deleteButton;
@end
@implementation UserDetailController


-(instancetype)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil{
    self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil];
    if (self) {
        self.hidesBottomBarWhenPushed = YES;
    }
    return self;
}

-(void)viewWillAppear:(BOOL)animated{
    //    修改navigation的颜色
    [self.navigationController.navigationBar setBackgroundImage:[UIImage new] forBarMetrics:UIBarMetricsDefault];
    self.navigationController.navigationBar.shadowImage = [UIImage new];
}


-(void)viewWillDisappear:(BOOL)animated{
    [self.navigationController.navigationBar setBackgroundImage:nil forBarMetrics:UIBarMetricsDefault];
    self.navigationController.navigationBar.shadowImage=nil;
}

- (void)viewDidLoad {
    [super viewDidLoad];
    _pageCount = 1;
    self.bottomView=[BottomView initCellBottomView];
    self.view.backgroundColor = [UIColor whiteColor];
    [self initializeUserSource];
    [self.view addSubview:self.collectionView];
    self.collectionView.mj_header = [MJRefreshNormalHeader headerWithRefreshingTarget:self refreshingAction:@selector(loadNewData)];
    self.collectionView.mj_footer = [MJRefreshAutoNormalFooter footerWithRefreshingTarget:self refreshingAction:@selector(loadMoreData)];
    
    
    
}

- (void)loadMoreData {
    _pageCount++;
    [self initializeUserSource];
}
- (void)loadNewData {
    [self.dataSource removeAllObjects];
    _pageCount = 0;
    [self initializeUserSource];
}

//获取会员视频
- (void)initializeUserSource{
    [[NetworkingHelper shareINstance] GET:@"User/getUserShare" dict:@{@"pg":@(_pageCount),@"user_id":[ConfigModel shareConfigModel].user_id} succeed:^(id data) {
        
        _total = [data[@"values"][@"total"] intValue];
        ShareListRootModel *rootModel = [[ShareListRootModel alloc]initWithDictionary:data[@"values"] error:nil];
        [_dataSource addObjectsFromArray:rootModel.list];
        for (int index = 0; index < _dataSource.count; index++) {
            ShareVideosInfoModel *model =  _dataSource[index];
            CGFloat imageHeight=[Utils getImageHeightWithUrl:model.share_image withFrameWidth:(kScreenW-20)/2.0];
            CGFloat textheight=[Utils changeStationWidth:model.share_name anWidthTxtt:(kScreenW-20)/2.0 anfont:14];
            [self.imagesHeightArray addObject:@(imageHeight)];
            [self.textHeightsArray addObject:@(textheight)];
            
        }
        [self.collectionView reloadData];
        if (_pageCount >= _total) {
            [self.collectionView.mj_footer endRefreshingWithNoMoreData];
        } else {
            [self.collectionView.mj_footer endRefreshing];
        }
        [self.collectionView.mj_header endRefreshing];
    } failure:^(NSError *error) {
        [self.collectionView.mj_footer endRefreshing];
        [self.collectionView.mj_header endRefreshing];
        NSLog(@"%@",error);
    }];
    
}


#pragma mark --UICollectionViewDelegate,UICollectionViewDataSource,MUCollectionViewFlowLayoutDelegate
- (NSInteger)collectionView:(UICollectionView *)collectionView numberOfItemsInSection:(NSInteger)section {
    
    return self.dataSource.count;
}

//这里传的字典没有传user_id,传了token
- (void)collectionView:(UICollectionView *)collectionView didSelectItemAtIndexPath:(NSIndexPath *)indexPath {
    DetailViewController2 *detailVc=[[DetailViewController2 alloc] init];
    ShareVideosInfoModel *model = self.dataSource[indexPath.row];
    detailVc.parameterUrl = @"User/getUserSharesInfo";
    detailVc.parameterDic =@{@"share_id":@([model.share_id intValue])};
    
    [self.navigationController pushViewController:detailVc animated:YES];
}


- (UICollectionViewCell *)collectionView:(UICollectionView *)collectionView cellForItemAtIndexPath:(NSIndexPath *)indexPath {
    
    ShareVideosInfoModel *model=self.dataSource[indexPath.row];
    if ([model.user_id isEqualToString:myUserId]) {
        BaseLayoutCell *cell=(BaseLayoutCell *)[collectionView dequeueReusableCellWithReuseIdentifier:kMineCell forIndexPath:indexPath];
        cell.model=model;
        
        cell.deleteButton.tag=100+indexPath.row;
        [cell.deleteButton addTarget:self action:@selector(deleteCell:) forControlEvents:UIControlEventTouchUpInside];
        return cell;
    }else{
        BaseCell *cell=(BaseCell *)[collectionView dequeueReusableCellWithReuseIdentifier:kCell forIndexPath:indexPath];
        cell.model=model;
        return cell;
    }
    
    // BaseLayoutCell *cell=(BaseLayoutCell *)[collectionView dequeueReusableCellWithReuseIdentifier:kCell forIndexPath:indexPath];
    //  cell.bigImageView.height=[self.imageHeightssArray[indexPath.row] floatValue];
    
    return nil;
    
    
    
    
}
- (CGFloat)collectionView:(UICollectionView *)collectionView layout:(UICollectionViewLayout *)collectionViewLayout heightForItemAtIndexPath:(NSIndexPath *)indexPath {
    return [self.imagesHeightArray[indexPath.row] floatValue]+[self.textHeightsArray[indexPath.row] floatValue]+80;
    
}

- (CGSize)collectionView:(UICollectionView *)collectionView layout:(UICollectionViewLayout *)collectionViewLayout referenceSizeForHeaderInSection:(NSInteger)section
{
    return CGSizeMake(kScreenW, 225.0/568.0*kScreenH);
}
- (CGSize)collectionView:(UICollectionView *)collectionView layout:(UICollectionViewLayout *)collectionViewLayout referenceSizeForFooterInSection:(NSInteger)section
{
    return CGSizeMake(kScreenW, 200);
}



- (UICollectionReusableView *)collectionView:(UICollectionView *)collectionView viewForSupplementaryElementOfKind:(NSString *)kind atIndexPath:(NSIndexPath *)indexPath
{
    //    UICollectionReusableView  *headerView=nil;
    if (kind == CZCollectionElementKindSectionHeader) {
        if (kind == CZCollectionElementKindSectionHeader) {
            UserHeaderView * headerView = [collectionView dequeueReusableSupplementaryViewOfKind:kind withReuseIdentifier:kHeader forIndexPath:indexPath];
            return headerView;
        }
    } else if (kind == CZCollectionElementKindSectionFooter) {
        UICollectionReusableView *footer = [collectionView dequeueReusableSupplementaryViewOfKind:kind withReuseIdentifier:CXFooterCell forIndexPath:indexPath];
        return footer;
    }
    return nil;
}


-(void)deleteCell:(UIButton *)button{
    NSInteger tag=button.tag-100;
    [self.dataSource removeObjectAtIndex:tag];
    [self.collectionView reloadData];
    
}
#pragma mark -- Getter
- (UICollectionView *)collectionView {
    if (!_collectionView) {
        MUCollectionViewFlowLayout * layout = [[MUCollectionViewFlowLayout alloc] init];
        layout.minimumLineSpacing = 10;
        layout.minimumInteritemSpacing = 10;
        layout.sectionInsets = UIEdgeInsetsMake(10, 0, 10, 0);
        layout.columnCount = 2;
        _collectionView = [[UICollectionView alloc]initWithFrame:CGRectMake(0, 0, [UIScreen mainScreen].bounds.size.width, [UIScreen mainScreen].bounds.size.height) collectionViewLayout:layout];
        _collectionView.dataSource = self;
        _collectionView.delegate = self;
        _collectionView.backgroundColor = kColor(242, 242, 242);
        [_collectionView registerNib:[UINib nibWithNibName:kHeader bundle:nil] forSupplementaryViewOfKind:CZCollectionElementKindSectionHeader withReuseIdentifier:kHeader];
        [_collectionView registerNib:[UINib nibWithNibName:kCell bundle:nil] forCellWithReuseIdentifier:kCell];
        [_collectionView registerNib:[UINib nibWithNibName:kMineCell bundle:nil] forCellWithReuseIdentifier:kMineCell];
        [_collectionView registerClass:[UICollectionReusableView class] forSupplementaryViewOfKind:CZCollectionElementKindSectionFooter withReuseIdentifier:CXFooterCell];
        [self.view addSubview:_collectionView];
        
    }
    return _collectionView;
    
}

-(void)viewDidDisappear:(BOOL)animated{
    [super viewDidDisappear:animated];
    [[NSNotificationCenter defaultCenter] postNotificationName:@"reStartVideo" object:nil];
}


- (NSMutableArray *)heightArray {
    if (!_heightArray) {
        _heightArray = [NSMutableArray array];
        
    }
    return _heightArray;
}
- (NSMutableArray *)dataSource {
    if (!_dataSource) {
        _dataSource = [NSMutableArray array];
    }
    return _dataSource;
}

-(NSMutableArray *)imagesHeightArray{
    if (_imagesHeightArray==nil) {
        _imagesHeightArray=[[NSMutableArray alloc] init];
    }
    return _imagesHeightArray;
}

-(NSMutableArray *)textHeightsArray{
    if (_textHeightsArray==nil) {
        _textHeightsArray=[[NSMutableArray alloc] init];
    }
    return _textHeightsArray;
}

@end

