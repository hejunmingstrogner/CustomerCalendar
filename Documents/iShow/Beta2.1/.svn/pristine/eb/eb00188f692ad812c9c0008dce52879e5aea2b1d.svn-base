//
//  DetailViewCell.m
//  VideoProject_0.1Beta
//
//  Created by storm on 16/10/18.
//  Copyright © 2016年 CX. All rights reserved.
//

#import "DetailViewCell.h"

@implementation DetailViewCell

- (void)awakeFromNib {
    [super awakeFromNib];
    _topicsArray = [NSMutableArray array];
    _headerImageView.clipsToBounds = YES;
    _headerImageView.layer.cornerRadius = _headerImageView.width/2.0;
    
    /**
    //1.初始化视频播放器
    _playerViewController = [AVPlayerViewController new];
    //2.设置视频播放器的大小和位置
    _playerViewController.view.frame = CGRectMake(5, CGRectGetMaxY(_headerImageView.frame) + 15, self.width - 10  , CGRectGetMinY(_titleLabel.frame)- 40*kDistanceWidthRatio- CGRectGetMaxY(_headerImageView.frame) - 10);
    _playerViewController.showsPlaybackControls = YES;
    //6.将播放器呈现在界面上
    [[self viewController] addChildViewController:_playerViewController];
    [self addSubview:_playerViewController.view];
     */
    self.videoImage.userInteractionEnabled = YES;
    //    AVLayerVideoGravityResizeAspect
    //    [[NSNotificationCenter defaultCenter]addObserver:self selector:@selector(isPlayer) name:@"anjscnaskjn" object:nil];
    

}

- (UIViewController *)viewController {
    for (UIView* next = [self superview]; next; next = next.superview) {
        UIResponder *nextResponder = [next nextResponder];
        if ([nextResponder isKindOfClass:[UIViewController class]]) {
            return (UIViewController *)nextResponder;
        }
    }
    return nil;
}

- (void)setDetailModel:(ShareVideosInfoModel *)detailModel {
    _detailModel = detailModel;
    [_topicsArray removeAllObjects];
    [_headerImageView sd_setImageWithURL:[NSURL URLWithString:_detailModel.user_image] placeholderImage:[UIImage imageNamed:@"test"]];
    _titleLabel.text = _detailModel.share_name;
    
    _userNameLabel.text = _detailModel.user_nick_name?_detailModel.user_nick_name:@"正在加载";
    int zan_count=   [_detailModel.is_zan intValue];
    if (zan_count==1) {
        _upBut.selected=YES;
    }
    
    
    _upLabel.text = _detailModel.video_zan_count ?[NSString stringWithFormat:@"%ld",_detailModel.video_zan_count.integerValue]:@"0";
  //  _upLabel.text=@"100";
    _commentLabel.text = _detailModel.comment_count;
    _userTimeLabel.text=_detailModel.share_uptime;
    [_videoImage sd_setImageWithURL:[NSURL URLWithString:_detailModel.share_image] placeholderImage:[UIImage imageNamed:@"1.jpg"]];
    _userCountLabel.text = [NSString stringWithFormat:@"%d 次搜索",[_detailModel.video_play_count intValue]] ;
    if (_detailModel.is_follow.integerValue == 1) {
        self.attentionBut.selected = YES;
    } else {
        self.attentionBut.selected = NO;
    }
     [self addConstrains];
}




-(void)addConstrains{
    
    __weak typeof(self)weakSelf=self;
    CGFloat imageHeight=[Utils getImageHeightWithUrl:_detailModel.share_image withFrameWidth:weakSelf.contentView.frame.size.width];
    CGFloat textHeight=[Utils changeStationWidth:_detailModel.share_name anWidthTxtt:weakSelf.contentView.frame.size.width anfont:14];
    

    
    self.topView.frame=CGRectMake(0, 0, self.contentView.frame.size.width, 47);
    
    self.videoView.frame=CGRectMake(0, CGRectGetMaxY(self.topView.frame)+5, self.contentView.frame.size.width, imageHeight);
    self.videoImage.frame=CGRectMake(0, 0, self.videoView.frame.size.width, self.videoView.frame.size.height);
    
    
    
    
    self.videoPlayerView.frame=self.videoView.frame;
    
    
    self.titleLabel.frame=CGRectMake(10, CGRectGetMaxY(self.videoView.frame)+6, self.contentView.frame.size.width-20, textHeight);
    self.bottomView.frame=CGRectMake(0, CGRectGetMaxY(self.titleLabel.frame)+8, self.contentView.frame.size.width, 37);
    
    self.blackTopView.frame=CGRectMake(0, 0, self.topView.frame.size.width, self.topView.frame.size.height);
    self.blackBottomView.frame=CGRectMake(0, CGRectGetMaxY(self.blackTopView.frame), self.contentView.frame.size.width, CGRectGetMaxY(self.bottomView.frame)-CGRectGetMaxY(self.blackTopView.frame));
}


//评论
- (IBAction)commentButtonClick:(id)sender {
    
    CommentController *comment = [[CommentController alloc]init];
    comment.share_id = [_detailModel.share_id intValue];
    
    // [[self viewController].navigationController pushViewController:comment animated:YES];
    DetailViewController2 *controller=(DetailViewController2 *)[self viewController];
    [controller.videPlayer.player pause];
    [controller.navigationController pushViewController:comment animated:YES];
  
}

//用户详情
- (IBAction)userDetailButtonClick:(id)sender {
    [ConfigModel shareConfigModel].user_id=[NSNumber numberWithInt:_detailModel.user_id.intValue];
    DetailViewController2 *controller=(DetailViewController2 *)[self viewController];
    [controller.videPlayer.player pause];
    UserDetailController *detail=[[UserDetailController alloc] init];
    [[self viewController].navigationController pushViewController:detail animated:YES];
}

//关注
- (IBAction)careButtonClick:(id)sender {
    
        if (self.attentionBut.selected==NO) {
            NSDictionary *dict=@{@"follow_id":_detailModel.user_id};
            [[NetworkingHelper shareINstance] GET:@"User/followUser" dict:dict succeed:^(id data) {
                //  self.attentionBut.selected = !self.attentionBut.selected;
                NSNumber *num=[data objectForKey:@"state"];
                if (num.integerValue == 1) {
                    
                    self.attentionBut.selected=!self.attentionBut.selected;
                    self.detailModel.is_follow=@"1";//关注成功，吧model数据源内容改变，不然cell滑动的过程关注按钮的状态还是会变
                }else{
                    NSNumber *codeNum=[data objectForKey:@"errno"];
                    if (codeNum.integerValue==70000) {
                        self.attentionBut.selected=!self.attentionBut.selected;
                        self.detailModel.is_follow=@"1";//操作失败的意味已经关注过了，所以这时也需要把关注按钮的状态改变，model的内容也要改变
                    }
                }
                
            } failure:^(NSError *error) {
                
            }];
        } else{
            self.alert=[AlertView instanceAlertView];
            self.alert.delegate=self;
            self.alert.layer.cornerRadius=20;
            self.utils=[[AlertUtils alloc] init];
            self.utils.contentView=self.alert;
            self.alert.describeLabel.text=@"确定不再关注此人?";
            [self.utils show];
        }
   
}
//这里处理数据，如果选择YES,才会处理数据
-(void)alertContentYesButtonClick{
    
    NSDictionary *dict=@{@"follow_id":self.detailModel.user_id};
    
    self.alert.describeLabel.text=@"确定不再关注此人?";
    
    [[NetworkingHelper shareINstance] GET:@"User/cancelFollowUser" dict:dict succeed:^(id data) {
        if (data) {
            NSNumber *num=[data objectForKey:@"state"];
            if (num.integerValue == 1) {
                
                self.attentionBut.selected=!self.attentionBut.selected;
                self.detailModel.is_follow=@"0";
            }else{
                NSNumber *codeNum=[data objectForKey:@"errno"];
                if (codeNum.integerValue==70000) {
                    self.attentionBut.selected=!self.attentionBut.selected;
                    self.detailModel.is_follow=@"0";//操作失败的意味已经关注过了，所以这时也需要把关注按钮的状态改变，model的内容也要改变
                }
            }
        }
    } failure:^(NSError *error) {
        
    }];
}

//分享
- (IBAction)shareButtonClick:(id)sender {

    //1、创建分享参数
    NSArray* imageArray = @[[UIImage imageNamed:@"qq"]];
   // NSArray *imageArray=@[[UIImage ]];
    //（注意：图片必须要在Xcode左边目录里面，名称必须要传正确，如果要分享网络图片，可以这样传iamge参数 images:@[@"http://mob.com/Assets/images/logo.png?v=20150320"]）
    //if (imageArray) {
        
        NSMutableDictionary *shareParams = [NSMutableDictionary dictionary];
        NSString *str=[NSString stringWithFormat:@"%@",_detailModel.share_image];
        [shareParams SSDKSetupShareParamsByText:_detailModel.share_name
                                         images:@[_detailModel.share_image]
                                            url:[NSURL URLWithString:[NSString stringWithFormat:@"http://www.ishowface.cn/share.php?id=%@",_detailModel.share_id]]
                                          title:@"=IShow"
                                           type:SSDKContentTypeAuto];
        //2、分享（可以弹出我们的分享菜单和编辑界面）
        [ShareSDK showShareActionSheet:nil //要显示菜单的视图, iPad版中此参数作为弹出菜单的参照视图，只有传这个才可以弹出我们的分享菜单，可以传分享的按钮对象或者自己创建小的view 对象，iPhone可以传nil不会影响
                                 items:nil
                           shareParams:shareParams
                   onShareStateChanged:^(SSDKResponseState state, SSDKPlatformType platformType, NSDictionary *userData, SSDKContentEntity *contentEntity, NSError *error, BOOL end) {
                       
                       switch (state) {
                           case SSDKResponseStateSuccess:
                           {
                               UIAlertView *alertView = [[UIAlertView alloc] initWithTitle:@"分享成功"
                                                                                   message:nil
                                                                                  delegate:nil
                                                                         cancelButtonTitle:@"确定"
                                                                         otherButtonTitles:nil];
                               [alertView show];
                               break;
                           }
                           case SSDKResponseStateFail:
                           {
                               UIAlertView *alert = [[UIAlertView alloc] initWithTitle:@"分享失败"
                                                                               message:[NSString stringWithFormat:@"%@",error]
                                                                              delegate:nil
                                                                     cancelButtonTitle:@"OK"
                                                                     otherButtonTitles:nil, nil];
                               [alert show];
                               break;
                           }
                           default:
                               break;
                       }
                   }
         ];
//}
    
}
//点赞
- (IBAction)praiseButtonClick:(id)sender {
    

        NSDictionary *dict=@{@"video_id":_detailModel.video_id};
        [[NetworkingHelper shareINstance] GET:@"Video/zanVideo" dict:dict succeedData:^(id data) {
            if (data) {
                _upBut.selected=!_upBut.selected;
            }
        } failure:^(NSError *error) {
            
        }];
 
}
- (IBAction)videoDetailInfoButtonClick:(id)sender {
}

-(void)showAlertView{
    AlertUtils *utils=[[AlertUtils alloc] init];
    AlertView *view=[AlertView instanceAlertView];
    view.layer.cornerRadius=20;
    view.describeLabel.text=@"还未进行登录，请先登录";
    utils.contentView=view;
    [utils show];
}
- (void)setSelected:(BOOL)selected animated:(BOOL)animated {
    [super setSelected:selected animated:animated];

    
}

+ (DetailViewCell *)shareInstance{
    static DetailViewCell *cellInstance=nil;
    static dispatch_once_t predicate;
    
    dispatch_once(&predicate, ^{
        cellInstance=[[self alloc] init];
    });
    return cellInstance;
}

-(id)init{
    NSArray *nib=[[NSBundle mainBundle] loadNibNamed:@"DetailViewCell" owner:self options:nil];
    self=[nib lastObject];
    if (self) {
        
    }
    return self;
}
@end
