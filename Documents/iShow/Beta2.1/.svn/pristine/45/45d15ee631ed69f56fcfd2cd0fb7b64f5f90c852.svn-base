//
//  BaseCollectionVIew.m
//  VideoProject_0.1Beta
//
//  Created by storm on 16/11/7.
//  Copyright © 2016年 CX. All rights reserved.
//

#import "BaseCollectionVIew.h"
#import "DetailViewController2.h"
#import "MakeViewController.h"
#import "SecondCellLayout.h"
#import "BaseCellLayout.h"
//#import "ShareFMDBManager.h"
//#import "DetailViewController2.h"
#define kCell @"BaseCell"
static NSString *const HeaderCell = @"CXHeaderCell";
static NSString *const FooterCell = @"CXFooterCell";
static NSString *const  CellID = @"cellID";
@implementation BaseCollectionVIew
- (void)dealloc {
    
}
-(instancetype)initWithFrame:(CGRect)frame collectionViewLayout:(UICollectionViewLayout *)layout{
    
    if (self=[super initWithFrame:frame collectionViewLayout:layout]) {
        self.frame=frame;
        
        _pageCount=1;
        self.array=[[NSMutableArray alloc] init];
        self.heightArray=[[NSMutableArray alloc] init];
        self.bannerArray=[[NSMutableArray alloc] init];
 
        self.backgroundColor=kColor(242, 242, 242);
        MJRefreshGifHeader *header=[MJRefreshGifHeader headerWithRefreshingTarget:self refreshingAction:@selector(loadNewData)];
        [header beginRefreshing];
        NSMutableArray *array=[[NSMutableArray alloc] init];
        for (int i=0; i<19; i++) {
            UIImage *image=[UIImage imageNamed:[NSString stringWithFormat:@"default%d.png",(i+1)]];
            [array addObject:image];
        }
        [header setImages:array forState:MJRefreshStateIdle];
        [header setImages:array forState:MJRefreshStateRefreshing];
        [header setImages:array forState:MJRefreshStatePulling];
        self.mj_header=header;
        self.mj_footer = [MJRefreshAutoNormalFooter footerWithRefreshingTarget:self refreshingAction:@selector(loadMoreData)];
        _scrollView = [[ScrollView alloc]initWithFrame:CGRectMake(0, 0, self.frame.size.width, kScrollHeight)];
        _scrollView.modelArray=[[NSMutableArray alloc] init];
        
    }
    
    return self;
}

-(void)loadDataSource{
    [self initCollectionView];
}


-(void)initCollectionView{
    self.dataSource=self;
    self.delegate=self;
    if (self.cellType==secondCell) {
        [self registerClass:[SecondCollectionCell class] forCellWithReuseIdentifier:CellID];
       // [self registerNib:[UINib nibWithNibName:@"SecoundBaseCell" bundle:nil] forCellWithReuseIdentifier:CellID];
    }else{
        [self registerClass:[VideoCollectionCell class] forCellWithReuseIdentifier:kCell];
      //  [self registerNib:[UINib nibWithNibName:kCell bundle:nil] forCellWithReuseIdentifier:kCell];
    }
    
    
    
    
    [self registerClass:[UICollectionReusableView class] forSupplementaryViewOfKind:CZCollectionElementKindSectionHeader withReuseIdentifier:HeaderCell];
    [self registerClass:[UICollectionReusableView class] forSupplementaryViewOfKind:CZCollectionElementKindSectionFooter withReuseIdentifier:FooterCell];

    [self initializeUserSource];
    
}

- (void)loadMoreData {
   
    _pageCount++;
    [self initializeUserSource];
}
- (void)loadNewData {
    [self.array removeAllObjects];
    _pageCount = 1;
    [self initializeUserSource];
}


-(void)initializeUserSource{
    NSDictionary *dict;
//    if(_cat_id==nil){
//        _cat_id=@"1";
//    }
//    NSLog(@"%@",_cat_id);
    if (self.paraDic==nil) {
       dict=@{@"page":@(_pageCount),@"cat_id":@1};
    }else{
        dict=@{@"page":@(_pageCount),@"topic_id":_paraDic};
    }
    [[NetworkingHelper shareINstance] GET:self.urlString dict:dict succeed:^(id data) {
        _total = [data[@"values"][@"total"] intValue];
        dispatch_async(dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0),^{
             NSMutableArray *layouts=[[NSMutableArray alloc] init];
            if (self.cellType==secondCell) {
                ThemeListRootModel *themeRootModel = [[ThemeListRootModel alloc]initWithDictionary:data[@"values"] error:nil];
                for (int index = 0; index < themeRootModel.list.count ; index ++) {
                    SecondCellLayout *layout=[SecondCellLayout new];
                    ThemeListModel *model=themeRootModel.list[index];
                    layout.tweet=model;
                    [layouts addObject:layout];
                }
                
            }else{
                
                ShareListRootModel *rootModel = [[ShareListRootModel alloc]initWithDictionary:data[@"values"] error:nil];
               
                for (int index = 0; index < rootModel.list.count; index++) {
                    BaseCellLayout *layout = [BaseCellLayout new];
                    ShareVideosInfoModel *model =  rootModel.list[index];
                    layout.tweet=model;
                    
                    [layouts addObject:layout];

                }
            }
            
            dispatch_async(dispatch_get_main_queue(),^{
                [self.array addObjectsFromArray:layouts];
                 [self reloadData];
                if (_pageCount >= _total) {
                    [self.mj_footer endRefreshingWithNoMoreData];
                } else {
                    [self.mj_footer endRefreshing];
                }
                [self.mj_header endRefreshing];
            });

        });
        
    } failure:^(NSError *error) {
        [self.mj_footer endRefreshing];
        [self.mj_header endRefreshing];
    }];
    if (self.bannerDict!=nil) {
        [self getBannerData];
    }
    
}
-(void)getBannerData{
    [[NetworkingHelper shareINstance] GET:@"Banner/getBanner" dict:self.bannerDict succeed:^(id data) {
        BannerRootModel *rootModel = [[BannerRootModel alloc]initWithDictionary:data[@"values"] error:nil];
        [self.bannerArray addObjectsFromArray:rootModel.list];
        self.scrollView.modelArray = self.bannerArray;
        [self reloadData];
    } failure:^(NSError *error) {
        NSLog(@"%@",error);
    }];
}


-(NSInteger)collectionView:(UICollectionView *)collectionView numberOfItemsInSection:(NSInteger)section{
    //return 10;
    return self.array.count;
}

-(UICollectionViewCell *)collectionView:(UICollectionView *)collectionView cellForItemAtIndexPath:(NSIndexPath *)indexPath{
    if (self.array.count == 0) {
        return nil;
    } else {
        if (self.cellType==secondCell) {
            SecondCollectionCell *cell = (SecondCollectionCell *)[collectionView dequeueReusableCellWithReuseIdentifier:CellID forIndexPath:indexPath];
            cell.cellTag = indexPath.row;
            cell.delegate=self;
            [cell setLayout:_array[indexPath.row]];
            return cell;
        
        } else {

        VideoCollectionCell *cell=(VideoCollectionCell *)[collectionView dequeueReusableCellWithReuseIdentifier:kCell forIndexPath:indexPath];
        cell.cellTag=indexPath.row;
        cell.delegate=self;
        [cell setLayout:_array[indexPath.row]];
        return cell;
        }
    }
}

-(void)collectionView:(UICollectionView *)collectionView didSelectItemAtIndexPath:(NSIndexPath *)indexPath{
//    if (self.cellType==secondCell) {
//        ThemeListModel *model =self.array[indexPath.row];
//        [self.cellDelegate cellDidSelectedWithThemeModel:model];
//    }else{
//        ShareVideosInfoModel *model=self.array[indexPath.row];
//        [self.cellDelegate cellDidSelectedWithShareModel:model];
//    }
    
}

-(void)collectionView:(UICollectionView *)collectionView willDisplayCell:(UICollectionViewCell *)cell forItemAtIndexPath:(NSIndexPath *)indexPath{
//        if(self.array.count-indexPath.row<5 && !_updating){
//            _updating=YES;
//            [self loadMoreData];
//        }

}

-(CGFloat)collectionView:(UICollectionView *)collectionView layout:(UICollectionViewLayout *)collectionViewLayout heightForItemAtIndexPath:(NSIndexPath *)indexPath{
    if (self.cellType==secondCell) {
        
        return ((SecondCellLayout *)_array[indexPath.row]).height;
    }
    
    
    return ((BaseCellLayout *)_array[indexPath.row]).height;

   
}

-(CGSize)collectionView:(UICollectionView *)collectionView layout:(UICollectionViewLayout *)collectionViewLayout referenceSizeForFooterInSection:(NSInteger)section{
    return CGSizeMake(kScreenW, 1);
}

-(CGSize)collectionView:(UICollectionView *)collectionView layout:(UICollectionViewLayout *)collectionViewLayout referenceSizeForHeaderInSection:(NSInteger)section{
    if (self.bannerDict!=nil) {
        return CGSizeMake(kScreenW, kScrollHeight);
    }
    return CGSizeMake(kScreenW, 1);
    
}

- (UICollectionReusableView *)collectionView:(UICollectionView *)collectionView viewForSupplementaryElementOfKind:(NSString *)kind atIndexPath:(NSIndexPath *)indexPath
{
    //    UICollectionReusableView  *headerView=nil;
    if (kind == CZCollectionElementKindSectionHeader) {
        UICollectionReusableView * headerView = [collectionView dequeueReusableSupplementaryViewOfKind:kind withReuseIdentifier:HeaderCell forIndexPath:indexPath];
        
        [headerView addSubview:self.scrollView];
        return headerView;
    } else if (kind == CZCollectionElementKindSectionFooter) {
        UICollectionReusableView *footer = [collectionView dequeueReusableSupplementaryViewOfKind:kind withReuseIdentifier:FooterCell forIndexPath:indexPath];
        return footer;
    }
    return nil;
}

-(BOOL)collectionView:(UICollectionView *)collectionView canMoveItemAtIndexPath:(NSIndexPath *)indexPath{
    return YES;
}

-(void)secondCollectionCellClick:(SecondCollectionCell *)cell{
    MakeViewController *makeVc = [[MakeViewController alloc]init];
    makeVc.theme_id = cell.layout.tweet.theme_id;
    [[self viewController].navigationController pushViewController:makeVc animated:YES];
}


-(void)baseCollectionCellClick:(VideoCollectionCell *)cell{
    DetailViewController2 *detailVc=[[DetailViewController2 alloc] init];
    detailVc.parameterUrl = @"Share/getShareVideosInfo";
    detailVc.parameterDic =@{@"share_id":@([cell.layout.tweet.share_id intValue])};
    [[self viewController].navigationController pushViewController:detailVc animated:YES];
}


@end
